name: Deploy to Kubernetes

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  NAMESPACE: default
  REPO_NAME: landing

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            pnpm-store
            svelte-kit
          key: cache-${{ hashFiles('Dockerfile') }}

      - name: inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "pnpm-store": "/pnpm/store",
              "svelte-kit": "/code/.svelte-kit"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
    steps:
      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:k8s-master

      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: azure/setup-helm@v4
        with:
          version: "3.14.4"

      - name: Create ~/.kube/config file
        run: |
          mkdir -p /home/runner/.kube
          echo "${{ secrets.KUBE_CONFIG }}" >> /home/runner/.kube/config

      - run: |
          helm upgrade --install --history-max=1 \
            -n ${{ env.NAMESPACE }} \
            ${{ env.REPO_NAME }} .helm
